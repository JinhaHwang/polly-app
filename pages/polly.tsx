import type {NextPage} from 'next'
import Head from 'next/head'

import {CognitoIdentityClient} from "@aws-sdk/client-cognito-identity";
import {fromCognitoIdentityPool,} from "@aws-sdk/credential-provider-cognito-identity";
import {Polly} from "@aws-sdk/client-polly";
import {getSynthesizeSpeechUrl} from "@aws-sdk/polly-request-presigner";

import styles from '../styles/Home.module.css'
import {ChangeEvent, useEffect, useRef, useState} from "react";
import type {PresignedPollyInput} from "@aws-sdk/polly-request-presigner/dist-types/getSynthesizeSpeechUrl";


const REGION=process.env.NEXT_PUBLIC_REGION
const IDENTITY_POOL_ID=process.env.NEXT_PUBLIC_IDENTITY_POOL_ID||'IDENTITY_POOL_ID'

console.log(REGION)
// Create the Polly service client, assigning your credentials
const client = new Polly({
  region: REGION,
  credentials: fromCognitoIdentityPool({
    client: new CognitoIdentityClient({region: REGION}),
    identityPoolId: IDENTITY_POOL_ID // IDENTITY_POOL_ID
  }),
});

// 예제 url
// https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/getting-started-browser.html
const PollyPage: NextPage = () => {
  const [url, setUrl] = useState<string>('')
  const [text, setText] = useState<string>('')
  const audioRef = useRef<HTMLAudioElement|null>(null)

  const handleTextChange = (e: ChangeEvent<HTMLInputElement>) => setText(e.target.value)

  const speakText = async () => {
    // Update the Text parameter with the text entered by the user
    try{
      // api 참고
      // https://docs.aws.amazon.com/polly/latest/dg/API_SynthesizeSpeech.html
      const pollyInput: PresignedPollyInput = {
        client, params: {
          OutputFormat: "mp3", // For example, 'mp3'
          SampleRate: '16000', // For example, '16000
          // TextType: "text", // For example, "text"
          VoiceId: "Ivy",
          Text: text,
        }
      }

      const url = await getSynthesizeSpeechUrl(pollyInput);
      // Load the URL of the voice recording into the browser

      setUrl(url as string)
    } catch (err) {
      console.log("Error", err);
    }
  };

  useEffect(() => {
    if (url && audioRef.current) {
      audioRef.current.load()
      audioRef.current.play()
    }
    // if (url) {
    //   const song = new Audio(url);
    //   song.play();
    // }
    //
  }, [url])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div id="textToSynth">
          <input type="text" id="textEntry" value={text} onChange={handleTextChange}/>
          <button className="btn default" onClick={speakText}>Synthesize</button>
          <p id="result">Enter text above then click <b>Synthesize</b></p>
        </div>
        <audio ref={ref => audioRef.current = ref} controls>
          <source type="audio/mp3" src={url} />
        </audio>
      </main>

    </div>
  )
}

export default PollyPage
